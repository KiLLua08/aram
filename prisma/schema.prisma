// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  players   Player[]
}

model Tournament {
  id        String   @id @default(uuid())
  name      String
  startDate DateTime
  endDate   DateTime

  // Relation to players in the tournament
  players   Player[] @relation("TournamentPlayers")

  // Relation to the winner of the tournament
  winnerId  String?
  winner    Player?  @relation("TournamentWinner", fields: [winnerId], references: [id])

  createdAt DateTime @default(now())
}

model Player {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  // Reverse relation to tournaments
  tournamentsParticipated Tournament[] @relation("TournamentPlayers")
  tournamentsWon          Tournament[] @relation("TournamentWinner")

  rank       Int           @default(0)
  matches    PlayerMatch[]
  leaderboards Leaderboard[]  // Relation to Leaderboard

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Match {
  id        String   @id @default(uuid())
  date      DateTime
  players   PlayerMatch[]
  createdAt DateTime @default(now())
}

model PlayerMatch {
  id        String   @id @default(uuid())
  playerId  String
  matchId   String
  player    Player   @relation(fields: [playerId], references: [id])
  match     Match    @relation(fields: [matchId], references: [id])
  score     Int
  createdAt DateTime @default(now())
}

model Leaderboard {
  id        String   @id @default(uuid())
  playerId  String
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  points    Int
  createdAt DateTime @default(now())
}
